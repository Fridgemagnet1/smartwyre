name: this is the reusable workflow 

on: 
    workflow_call: 
        inputs: 
          environment: 
            required: true 
            type: string 
          githubOwner: 
            required: true 
            type: string 
          githubAppId: 
            required: true 
            type: number 
          working-directory:
            required: false
            type: string
        secrets: 
          AZURE_SUBSCRIPTION_ID: 
            required: true 
          AZURE_CLIENT_ID: 
            required: true 
          AZURE_CLIENT_SECRET: 
            required: true 
          AZURE_TENANT_ID:  
            required: true 
          GH_IAC_ENT_TOKEN: 
            required: true 
          GH_APP_PRIVATE_KEY: 
            required: true 
          AZURE_STORAGE_ACCOUNT_DOMAIN_GUID:
              required: false
            
env: 
    ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }} 
    ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }} 
    ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }} 
    ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }} 
  
jobs: 
  terraform-plan: 
    name: 'Terraform Plan' 
    runs-on: ["general","container","${{ inputs.environment }}"] 
    defaults: 
      run: 
        working-directory: ./terraform/deployments/${{ inputs.working-directory }}
        shell: bash 
    steps: 
    - name: Checkout 
      uses: actions/checkout@v4
      
    - name: Login to azure 
      uses: azure/login@v1 
      with: 
        creds: | 
          { 
            "clientId": "${{ secrets.AZURE_CLIENT_ID }}", 
            "clientSecret": "${{ secrets.AZURE_CLIENT_SECRET }}", 
            "subscriptionId": "${{ secrets.AZURE_SUBSCRIPTION_ID }}", 
            "tenantId": "${{ secrets.AZURE_TENANT_ID }}" 
          } 
           
    - name: Generate Github App token 
      id: generate-token 
      uses: actions/create-github-app-token@v1 
      with: 
        app-id: ${{ inputs.githubAppId }} 
        private-key: ${{ secrets.GH_APP_PRIVATE_KEY }} 
        owner: ${{ github.repository_owner }} 
         
    - name: gh login 
      run: | 
        echo ${{ secrets.GH_IAC_ENT_TOKEN }} | gh auth login --with-token 
        gh auth status 
         
    - name: Terraform Plan 
      run: | 
        git config --global url."https://x-access-token:${{ steps.generate-token.outputs.token }}@github.com".insteadOf https://github.com 
        terraform init
        
        if [[ $(terraform workspace list) =~ "${{ inputs.environment }}" ]]; then
          echo "Selecting Workspace - ${{ inputs.environment }}"
          terraform workspace select ${{ inputs.environment }}
        else
          echo "Creating Workspace - ${{ inputs.environment }}"
          terraform workspace new ${{ inputs.environment }}
        fi

        export TF_VAR_azurerm_storage_account_azure_files_authentication_domain_guid="${{ secrets.AZURE_STORAGE_ACCOUNT_DOMAIN_GUID }}"        
        terraform plan -var-file="terraform.tfvars" 

  terraform-apply: 
    name: 'Terraform Apply' 
    needs: terraform-plan
    runs-on: ["general","container","${{ inputs.environment }}"] 
    environment: ${{ inputs.environment }}
    defaults: 
      run: 
        working-directory: ./terraform/deployments/${{ inputs.working-directory }}
        shell: bash 
    steps: 
    - name: Checkout 
      uses: actions/checkout@v4
      
    - name: Login to azure 
      uses: azure/login@v1 
      with: 
        creds: | 
          { 
            "clientId": "${{ secrets.AZURE_CLIENT_ID }}", 
            "clientSecret": "${{ secrets.AZURE_CLIENT_SECRET }}", 
            "subscriptionId": "${{ secrets.AZURE_SUBSCRIPTION_ID }}", 
            "tenantId": "${{ secrets.AZURE_TENANT_ID }}" 
          } 
           
    - name: Generate Github App token 
      id: generate-token 
      uses: actions/create-github-app-token@v1 
      with: 
        app-id: ${{ inputs.githubAppId }} 
        private-key: ${{ secrets.GH_APP_PRIVATE_KEY }} 
        owner: ${{ github.repository_owner }} 
         
    - name: gh login 
      run: | 
        echo ${{ secrets.GH_IAC_ENT_TOKEN }} | gh auth login --with-token 
        gh auth status 
         
    - name: Terraform Apply
      run: | 
        git config --global url."https://x-access-token:${{ steps.generate-token.outputs.token }}@github.com".insteadOf https://github.com 
        terraform init 
        export TF_VAR_azurerm_storage_account_azure_files_authentication_domain_guid="${{ secrets.AZURE_STORAGE_ACCOUNT_DOMAIN_GUID }}"
        terraform apply -auto-approve -var-file="terraform.tfvars" 